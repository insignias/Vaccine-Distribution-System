/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ProviderRole;

import UserInterface.ClinicRole.*;
import Business.EcoSystem;
import Business.Enterprise.ClinicEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ProviderEnterprise;
import Business.Network.Network;
import Business.Organization.CDCOrganization;
import Business.Organization.ClinicOrganization;
import Business.Organization.Organization;
import Business.Organization.ProviderOrganization;
import Business.Person.Clinician;
import Business.Person.Person;
import Business.Person.Vaccine;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ReactionRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author insignia
 */
public class ProviderReportVaccineReactionJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private ProviderOrganization providerOrg;
    private UserAccount account; 
    private ProviderEnterprise providerEnterprise;
    private Calendar calendar;
    private Date d;
    public ProviderReportVaccineReactionJPanel(JPanel upc,UserAccount account, ProviderEnterprise providerEnterprise, ProviderOrganization providerOrg,EcoSystem ecoSystem) {
        initComponents();
        userProcessContainer = upc;
        this.account = account;
        this.providerEnterprise = providerEnterprise;
        this.providerOrg = providerOrg;
        this.ecoSystem = ecoSystem;
        
        calendar = Calendar.getInstance();
        d = calendar.getTime();
        
        vaccineNamejComboBox.removeAllItems();
        lotNumberjComboBox.removeAllItems();
        manufacturerjComboBox.removeAllItems();
        for(Network n : ecoSystem.getNetworkList()){
            for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                //if(e.getLocation().equals(providerEnterprise.getLocation())){
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                    
                        for(Person p : o.getPersonDirectory().getPersonList()){
                         if(p instanceof Clinician){
                             Clinician clinician = (Clinician)p;
                                for(Vaccine v : clinician.getVaccineCatalog().getVaccineCatalog()){
                                vaccineNamejComboBox.addItem(v.getVaccineName());
                                 lotNumberjComboBox.addItem(v.getLotNumber());
                                 manufacturerjComboBox.addItem(v.getManufacturer());
                                }
                         }
                        }
                    
              }
          }  
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        patientNamejTextField = new javax.swing.JTextField();
        patientAddressjTextField = new javax.swing.JTextField();
        patientContactjTextField = new javax.swing.JTextField();
        dosesjTextField = new javax.swing.JTextField();
        submitjButton = new javax.swing.JButton();
        vaccinationDatejDateChooser = new com.toedter.calendar.JDateChooser();
        reactionDatejDateChooser = new com.toedter.calendar.JDateChooser();
        backButton = new javax.swing.JButton();
        vaccineNamejComboBox = new javax.swing.JComboBox();
        lotNumberjComboBox = new javax.swing.JComboBox();
        manufacturerjComboBox = new javax.swing.JComboBox();
        reactionDetailsjTextField = new javax.swing.JTextField();

        jLabel5.setText("jLabel5");

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("American Typewriter", 1, 18)); // NOI18N
        jLabel1.setText("PROVIDER REPORT VACCINE REACTION");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 12, -1, -1));

        jLabel2.setText("Patient Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 53, -1, -1));

        jLabel3.setText("Patient Address:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 99, -1, -1));

        jLabel4.setText("Patient Contact:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 145, -1, -1));

        jLabel6.setText("Vaccine Name:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 189, -1, -1));

        jLabel7.setText("No. Of Doses:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 230, -1, -1));

        jLabel8.setText("LOT Number:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 264, -1, -1));

        jLabel9.setText("Manufacturer:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 310, -1, -1));

        jLabel10.setText("Vaccination Date:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 351, -1, -1));

        jLabel11.setText("Reaction Date:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 391, -1, -1));

        jLabel12.setText("Reaction Details:");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 437, -1, -1));
        add(patientNamejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 47, 110, -1));
        add(patientAddressjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 93, 106, -1));
        add(patientContactjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 139, 106, -1));
        add(dosesjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 226, 105, -1));

        submitjButton.setText("Submit");
        submitjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitjButtonActionPerformed(evt);
            }
        });
        add(submitjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 477, -1, -1));
        add(vaccinationDatejDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 345, -1, -1));
        add(reactionDatejDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 385, -1, -1));

        backButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 477, -1, -1));

        vaccineNamejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        vaccineNamejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vaccineNamejComboBoxActionPerformed(evt);
            }
        });
        add(vaccineNamejComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 185, 125, -1));

        lotNumberjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        lotNumberjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lotNumberjComboBoxActionPerformed(evt);
            }
        });
        add(lotNumberjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 260, 125, -1));

        manufacturerjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        manufacturerjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manufacturerjComboBoxActionPerformed(evt);
            }
        });
        add(manufacturerjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 306, 125, -1));
        add(reactionDetailsjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 431, 193, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void submitjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitjButtonActionPerformed
        String patientName;
        try
        {
        String regex = "[^&%$#@!0-9()~`.,]*";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(patientNamejTextField.getText());
        if (!matcher.matches()) 
        throw new Exception("Enter valid characters for Patient name");
        }
        catch (Exception e) {
        //System.err.println("Caught IOException: " + e.getMessage());
        JOptionPane.showMessageDialog(null,e.getMessage());
        return;
        }
        
        try
        {
        patientName = patientNamejTextField.getText();
        if ((patientNamejTextField.getText().startsWith(" ")) || (patientNamejTextField.getText().isEmpty()))
            throw new Exception(" Please enter valid characters for Patient Name ");
        }        
        catch (Exception e) {
        //System.err.println("Caught IOException: " + e.getMessage());
        JOptionPane.showMessageDialog(null,e.getMessage());
        return;
        }
        
        String patientAddress;
        try
        {
        patientAddress = patientAddressjTextField.getText();
        if ((patientAddressjTextField.getText().startsWith(" ")) || (patientAddressjTextField.getText().isEmpty()))
            throw new Exception(" Please enter valid characters for Patient Address ");
        }        
        catch (Exception e) {
        //System.err.println("Caught IOException: " + e.getMessage());
        JOptionPane.showMessageDialog(null,e.getMessage());
        return;
        }
        
        
        
        String patientContact;
        try
        {
        if(!(patientContactjTextField.getText().length() == 10 ))
        throw new Exception(" Please enter 10 digits number for contact ");
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage() );
        return;
        }
        
//        try
//        {
            patientContact = (patientContactjTextField.getText());
            try
        {
        String regex = "[0-9]*";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(patientContactjTextField.getText());
        if (!matcher.matches()) 
        throw new Exception("Enter valid phone");
        }
        catch (Exception e) {
        //System.err.println("Caught IOException: " + e.getMessage());
        JOptionPane.showMessageDialog(null,e.getMessage());
        return;
        }
//        }
//        catch (NumberFormatException e) {
//        
//        JOptionPane.showMessageDialog(null,"Please enter numeric value for Contact ");
//        return;
//        }
//        try
//        {
//        if (patientContact < 0)
//            throw new Exception(" Please enter digits only ");
//        }
//        catch (Exception e) {
//        
//        JOptionPane.showMessageDialog(null,e.getMessage() );
//        return;
//         }
        
        String vaccineName = (String)vaccineNamejComboBox.getSelectedItem();
        
        String lotNumber = (String)lotNumberjComboBox.getSelectedItem();
        
        String manufacturer = (String)manufacturerjComboBox.getSelectedItem();
        
        int doses;
        try
        {
            doses = Integer.parseInt(dosesjTextField.getText());
        }
        catch (NumberFormatException e) {
        
        JOptionPane.showMessageDialog(null,"Please enter numeric value for doses ");
        return;
        }
        try
        {
        if (doses < 0)
            throw new Exception(" Please enter digits only ");
        }
        catch (Exception e) {
        
        JOptionPane.showMessageDialog(null,e.getMessage() );
        return;
         }
        
        Date vaccinationDate = vaccinationDatejDateChooser.getDate();
        String vDate = DateFormat.getDateInstance().format(vaccinationDate);
//        if(vaccinationDate.before(d))
//            {
//                JOptionPane.showMessageDialog(null, "Please select a valid date");
//                return;
//            }
        
        Date reactionDate = reactionDatejDateChooser.getDate();
        String rDate = DateFormat.getDateInstance().format(reactionDate);
        if(reactionDate.before(vaccinationDate))
            {
                JOptionPane.showMessageDialog(null, "Reaction date cannot be before vaccination Date");
                return;
            }
        
        String reactionDetails;
        try
        {
        reactionDetails = reactionDetailsjTextField.getText();
        if ((reactionDetailsjTextField.getText().startsWith(" ")) || (reactionDetailsjTextField.getText().isEmpty()))
            throw new Exception(" Please enter valid characters for reaction details ");
        }        
        catch (Exception e) {
        //System.err.println("Caught IOException: " + e.getMessage());
        JOptionPane.showMessageDialog(null,e.getMessage());
        return;
        }
        
        ReactionRequest rr = new ReactionRequest();
        rr.setPatientName(patientName);
        rr.setPatientAddress(patientAddress);
        rr.setPatientContact(String.valueOf(patientContact));
        rr.setVaccineName(vaccineName);
        rr.setDoses(doses);
        rr.setLotNumber(lotNumber);
        rr.setManufacturer(manufacturer);
        rr.setVaccinationDate(vDate);
        rr.setReactionDate(rDate);
        rr.setReactionDetails(reactionDetails);
        rr.setSender(account);
        rr.setStatus("Sent");
        rr.setLocation(providerEnterprise.getLocation());
        rr.setEnterpriseType(providerEnterprise.getEnterpriseType().getValue());
        rr.setEnterpriseName(providerEnterprise.getName());
        
        Organization org = null;
        for(Network n : ecoSystem.getNetworkList()){
            boolean flag = false;
            for(Enterprise e: n.getEnterpriseDirectory().getEnterpriseList()){
                if(e.getEnterpriseType().getValue().equals("CDC")){
                        System.out.println("enterpriseType: " +e.getEnterpriseType().getValue());
                        for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                            System.out.println("organization: " +o.getName());
                            if(o instanceof CDCOrganization){
                            System.out.println("instance of CDC Organization");
                            org = o;
                            flag = true;
                            break;
                            }
                        }
                    }
                
                
                if(flag==true)
                {
                    break;
                }
        }
            if(org!=null){
                org.getWorkQueue().getWorkRequestList().add(rr);
                account.getWorkQueue().getWorkRequestList().add(rr);
                System.out.println("order request added to org");
        }
            
            JOptionPane.showMessageDialog(null, "Submitted");
            return;
        } 
        
    }//GEN-LAST:event_submitjButtonActionPerformed

    private void vaccineNamejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vaccineNamejComboBoxActionPerformed
//        String vaccineName = (String)vaccineNamejComboBox.getSelectedItem();
//        if(vaccineName!=null){
//            boolean flag = false;
//            for(Person p : clinicOrg.getPersonDirectory().getPersonList()){
//                if(p instanceof Clinician){
//                    Clinician clinician = (Clinician)p;
//                    for(Vaccine v : clinician.getVaccineCatalog().getVaccineCatalog()){
//                        if(v.getVaccineName().equals(vaccineName)){
//                            quantityAvailablejTextField.setText(String.valueOf(v.getQuantity()));
//                            flag = true;
//                        }
//                        if(flag==true){
//                            break;
//                        }
//                    }
//                }
//            }
//        }
    }//GEN-LAST:event_vaccineNamejComboBoxActionPerformed

    private void lotNumberjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lotNumberjComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lotNumberjComboBoxActionPerformed

    private void manufacturerjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manufacturerjComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manufacturerjComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JTextField dosesjTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox lotNumberjComboBox;
    private javax.swing.JComboBox manufacturerjComboBox;
    private javax.swing.JTextField patientAddressjTextField;
    private javax.swing.JTextField patientContactjTextField;
    private javax.swing.JTextField patientNamejTextField;
    private com.toedter.calendar.JDateChooser reactionDatejDateChooser;
    private javax.swing.JTextField reactionDetailsjTextField;
    private javax.swing.JButton submitjButton;
    private com.toedter.calendar.JDateChooser vaccinationDatejDateChooser;
    private javax.swing.JComboBox vaccineNamejComboBox;
    // End of variables declaration//GEN-END:variables
}
