/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CDCRole;

import Business.EcoSystem;
import Business.Enterprise.CDCEnterprise;
import Business.Enterprise.ClinicEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CDCOrganization;
import Business.Organization.ClinicOrganization;
import Business.Organization.Organization;
import Business.Person.Clinician;
import Business.Person.Person;
import Business.Person.Vaccine;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author insignia
 */
public class VaccineDistributionOverviewJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private CDCEnterprise cdcEnterprise;
    private UserAccount account;
    private CDCOrganization cdcOrganization;
    public VaccineDistributionOverviewJPanel(JPanel upc,UserAccount account,CDCEnterprise cdcEnterprise,CDCOrganization cdcOrganization,EcoSystem ecoSystem) {
        initComponents();
        userProcessContainer = upc;
        this.ecoSystem = ecoSystem;
        this.cdcEnterprise = cdcEnterprise;
        this.account = account;
        this.cdcOrganization = cdcOrganization;
        locationjComboBox.removeAllItems();
                for(Network n : ecoSystem.getNetworkList()){
                    for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                        if(e instanceof ClinicEnterprise){
                            ClinicEnterprise clinicEnt = (ClinicEnterprise)e;
                            locationjComboBox.addItem(clinicEnt.getLocation());
                            
                        }
                    }       
                } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        chartjPanel = new javax.swing.JPanel();
        backjButton = new javax.swing.JButton();
        locationjComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("American Typewriter", 1, 18)); // NOI18N
        jLabel1.setText("CDC VACCINE DISTRIBUTION OVERVIEW");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, -1));

        chartjPanel.setBackground(new java.awt.Color(255, 255, 255));
        chartjPanel.setLayout(new java.awt.BorderLayout());
        add(chartjPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 510, 310));

        backjButton.setText("<< Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });
        add(backjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, -1, -1));

        locationjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        locationjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationjComboBoxActionPerformed(evt);
            }
        });
        add(locationjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, -1, -1));

        jLabel2.setText("Location:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void locationjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationjComboBoxActionPerformed
       String location = (String)locationjComboBox.getSelectedItem();
       DefaultCategoryDataset barDataSet = new DefaultCategoryDataset(); 
       for(Network n : ecoSystem.getNetworkList()){
                    for(Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()){
                        if(e instanceof ClinicEnterprise){
                                ClinicEnterprise clinicEnterprise = (ClinicEnterprise)e;
                                if(clinicEnterprise.getLocation().equals(location)){
                                    for(Organization o : e.getOrganizationDirectory().getOrganizationList()){
                                        if(o instanceof ClinicOrganization){
                                            for(Person p : o.getPersonDirectory().getPersonList()){
                                                if(p instanceof Clinician){
                                                    Clinician clinician = (Clinician)p;
                                                    for(Vaccine v : clinician.getVaccineCatalog().getVaccineCatalog()){
                                                    barDataSet.addValue(v.getQuantity(),v.getVaccineName(),"Quantity Available");
                                               
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }          
                }
            }       
                JFreeChart barChart = ChartFactory.createBarChart("Vaccine Review Bar Graph","Parameters","Values", barDataSet, PlotOrientation.VERTICAL, true, true, true);
                CategoryPlot bar = barChart.getCategoryPlot();
                ChartPanel barPanel = new ChartPanel(barChart);
                chartjPanel.removeAll();
                chartjPanel.add(barPanel);
                chartjPanel.validate();
    }//GEN-LAST:event_locationjComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton;
    private javax.swing.JPanel chartjPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox locationjComboBox;
    // End of variables declaration//GEN-END:variables
}
